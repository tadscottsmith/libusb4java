#!/bin/bash
#
# Copyright (C) 2018 Klaus Reimer <k@ailis.de>
# See LICENSE.md for licensing information.
#

# Exit on errors
set -e

# Go to base directory
cd $(dirname $0)/../..

# Show syntax help when called with wrong number of parameters
if [ $# -lt 1 ] || [ $# -gt 2 ]
then
    echo "Syntax: $0 ARCH [QEMU]"
    exit 1
fi

# Fetch CLI arguments and create some helper variables
ARCH=$1
QEMU=$2
OS=linux
TARGET=target
BUILD=$TARGET/build/$OS-$ARCH

# Map specified architecture to a debian docker image architecture
case $ARCH in
    x86-64)
        DOCKER_ARCH=amd64
        OS_ARCH=amd64
        ;;
    x86)
        DOCKER_ARCH=i386
        OS_ARCH=i386
        ;;
    aarch64)
        DOCKER_ARCH=arm64v8
        OS_ARCH=arm64
        ;;
    arm)
        DOCKER_ARCH=arm32v7
        OS_ARCH=armhf
        ;;
    armel)
        DOCKER_ARCH=arm32v5
        OS_ARCH=armel
        ;;
    *)
        DOCKER_ARCH=$ARCH
        OS_ARCH=$ARCH
        ;;
esac

# Create build directory
mkdir -p $BUILD

# Copy qemu binary to build directory if specified
if [ "$QEMU" != "" ]
then
    cp -f $QEMU $BUILD/
else
    # Dummy file to keep COPY in Dockerfile happy
    touch $BUILD/qemu-none
fi

# Build docker image
docker build . \
    --network host \
    -f dists/linux/Dockerfile \
    --build-arg ARCH=$ARCH \
    --build-arg DOCKER_ARCH=$DOCKER_ARCH \
    --build-arg OS_ARCH=$OS_ARCH \
    -t usb4java-build-$ARCH

# Compile libusb4java in docker image
docker run \
    -u $(id -u $USER):$(id -g $USER) \
    --network host \
    --rm \
    -v $(pwd):/workspace \
    usb4java-build-$ARCH \
    /bin/bash -c "
        cd /workspace/$BUILD;
        cmake ../../.. \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX='' \
            -DLibUsb_LIBRARIES='/usr/local/lib/libusb-1.0.a;/usr/local/lib/libudev.a' \
            -DLibUsb_LDFLAGS='-pthread -lrt';
        make install/strip DESTDIR=/workspace/$BUILD
    "

# Create the JAR file
mkdir -p "$BUILD/classes/org/usb4java/$OS-$ARCH"
cp "$BUILD/lib/libusb4java.so" "$BUILD/classes/org/usb4java/$OS-$ARCH"
jar cf "$TARGET/libusb4java-$OS-$ARCH.jar" -C "$BUILD/classes" org
